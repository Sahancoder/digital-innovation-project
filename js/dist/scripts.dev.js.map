{"version":3,"sources":["scripts.js"],"names":["document","addEventListener","console","log","mapNumberRange","n","a","b","c","d","setup","Array","from","querySelectorAll","map","cardEl","initCard","card","cardContent","querySelector","gloss","requestAnimationFrame","classList","add","e","pointerX","clientX","pointerY","clientY","cardRect","getBoundingClientRect","halfWidth","width","halfHeight","height","cardCenterX","left","cardCenterY","top","deltaX","deltaY","distanceToCenter","Math","sqrt","maxDistance","max","degree","rx","ry","style","transform","opacity","cards","forEach","index","setTimeout","tiles","observer","IntersectionObserver","entries","entry","isIntersecting","target","unobserve","threshold","tile","observe"],"mappings":"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","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    console.log('JavaScript is working!');\r\n});\r\n\r\n\r\n// card content loading\r\n\r\n/***********************\r\n *    Helper Functions   *\r\n ***********************/\r\n\r\nfunction mapNumberRange(n, a, b, c, d) {\r\n    return ((n - a) * (d - c)) / (b - a) + c\r\n  }\r\n  \r\n  /***********************\r\n   *        Setup        *\r\n   ***********************/\r\n  \r\n  function setup() {\r\n    Array.from(document.querySelectorAll('.card')).map((cardEl) =>\r\n      initCard(cardEl)\r\n    )\r\n  }\r\n  \r\n  /***********************\r\n   *      initCard       *\r\n   ***********************/\r\n  \r\n  function initCard(card) {\r\n    const cardContent = card.querySelector('.card__content')\r\n    const gloss = card.querySelector('.card__gloss')\r\n  \r\n    requestAnimationFrame(() => {\r\n      gloss.classList.add('card__gloss--animatable')\r\n    })\r\n  \r\n    card.addEventListener('mousemove', (e) => {\r\n      const pointerX = e.clientX\r\n      const pointerY = e.clientY\r\n  \r\n      const cardRect = card.getBoundingClientRect()\r\n  \r\n      const halfWidth = cardRect.width / 2\r\n      const halfHeight = cardRect.height / 2\r\n  \r\n      const cardCenterX = cardRect.left + halfWidth\r\n      const cardCenterY = cardRect.top + halfHeight\r\n  \r\n      const deltaX = pointerX - cardCenterX\r\n      const deltaY = pointerY - cardCenterY\r\n  \r\n      const distanceToCenter = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\r\n  \r\n      const maxDistance = Math.max(halfWidth, halfHeight)\r\n  \r\n      const degree = mapNumberRange(distanceToCenter, 0, maxDistance, 0, 10)\r\n  \r\n      const rx = mapNumberRange(deltaY, 0, halfWidth, 0, 1)\r\n      const ry = mapNumberRange(deltaX, 0, halfHeight, 0, 1)\r\n  \r\n      cardContent.style.transform = `perspective(400px) rotate3d(${-rx}, ${ry}, 0, ${degree}deg)`\r\n  \r\n      gloss.style.transform = `translate(${-ry * 100}%, ${-rx * 100}%) scale(2.4)`\r\n  \r\n      gloss.style.opacity = `${mapNumberRange(\r\n        distanceToCenter,\r\n        0,\r\n        maxDistance,\r\n        0,\r\n        0.6\r\n      )}`\r\n    })\r\n  \r\n    card.addEventListener('mouseleave', () => {\r\n      cardContent.style = null\r\n      gloss.style.opacity = 0\r\n    })\r\n  }\r\n  \r\n  /***********************\r\n   *      Start Here     *\r\n   ***********************/\r\n  \r\n  setup()\r\n\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const cards = document.querySelectorAll('.product-card');\r\n    cards.forEach((card, index) => {\r\n        setTimeout(() => {\r\n            card.classList.add('visible');\r\n        }, index * 100); // Delay each card's appearance\r\n    });\r\n});\r\n\r\n// customer reviews tab \r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const tiles = document.querySelectorAll('.review-tile');\r\n  const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n              entry.target.style.opacity = 1;\r\n              entry.target.style.transform = 'translateY(0)';\r\n              observer.unobserve(entry.target);\r\n          }\r\n      });\r\n  }, {\r\n      threshold: 0.1\r\n  });\r\n\r\n  tiles.forEach(tile => {\r\n      observer.observe(tile);\r\n  });\r\n});\r\n"],"file":"scripts.dev.js"}