{"version":3,"sources":["scripts.js"],"names":["mapNumberRange","c","a","b","d","n","Array","from","initCard","cardEl","map","cardContent","card","gloss","querySelector","requestAnimationFrame","addEventListener","cardRect","getBoundingClientRect","halfWidth","halfHeight","cardCenterY","deltaY","pointerY","distanceToCenter","sqrt","pointerX","style","transform","top","Math","deltaX","max","degree","maxDistance","rx","ry","concat","cards","document","querySelectorAll","forEach","setTimeout","index","tiles","observer","IntersectionObserver","entries","console","log","threshold","tile","observe","classList","add","entry","isIntersecting","target","opacity","unobserve"],"mappings":"aAYI,SAAQA,eAAeC,EAAhBC,EAAuBC,EAACF,EAAxBG,GACR,OAAAC,EAAAH,IAAAE,EAAAH,IAAAE,EAAAD,GAAAD,EAOCK,SAAMC,QAA6CD,MAAAC,KACjDC,SAASC,iBADwC,UAAAC,IAAA,SAAAD,GAAA,OAAnDD,SAAAC,KAUA,SAAME,SAAcC,GACpB,IAAMC,EAAaC,EAAAA,cAAc,kBAEjCC,EAAAA,EAAqBD,cAAO,gBAA5BC,sBAAA,WAIIF,EAACG,UAAAA,IAAiB,6BAIpBJ,EAAMK,iBAAgBC,YAAAA,SAAAA,GAEtB,IAAMC,EAAYF,EAAAA,QACZG,EAAaH,EAAAA,QAGbI,EAAcJ,EAAAA,wBAGdK,EAASC,EAAWF,MAA1B,EAEMG,EAAgBP,EAAQQ,OAAW,EASzCd,EAAAe,GALe1B,EAAewB,KAAAA,GAOxBG,EAAMC,GALD5B,EAAc6B,IAAYV,GArBvCK,EAAAM,KAAAL,KAAAM,EAAAA,EAAAT,EAAAA,GAsCEX,EAAoBmB,KAApBE,IAAAb,EAAAC,GADFa,EAAAjC,eAAAwB,EAAA,EAAAU,EAAA,EAAA,IAMFC,EAAAnC,eAAAsB,EAAA,EAAAH,EAAA,EAAA,GArBUiB,EAAKpC,eAAe+B,EAAQ,EAAGX,EAAY,EAAG,GAEpDT,EAAYgB,MAAMC,UAAlB,+BAAAS,QAA8DF,EAA9D,MAAAE,OAAqED,EAArE,SAAAC,OAA+EJ,EAA/E,QAuBCpB,EAAAc,MAAAC,UAAA,aAAAS,OAAA,KAAAD,EAAA,OAAAC,OAAA,KAAAF,EAAA,iBAGGG,EAAKX,MAAGY,QAARD,GAAAA,OAAiBE,eACjBC,EACFC,EACI9B,EACD+B,EAHP,OAUF/B,EAAMgC,iBAAiBJ,aAAiB,WAClCK,EAAWlB,MAAImB,KACjBC,EAAQN,MAAAA,QAAQ,IApGtBF,SAASvB,iBAAiB,mBAAoB,WAC1CgC,QAAQC,IAAI,4BA2GVC,QAGJN,SAAMH,iBAAQU,mBAAQ,WACTC,SAATZ,iBAAA,iBADJC,QAAA,SAAA7B,EAAA+B,GAdFD,WAAA,WAPY9B,EAAKyC,UAAUC,IAAI,YACZ,IAARX,OAMXJ,SAASvB,iBAAiB,mBAAoB,WAC5C,IAAM4B,EAAQL,SAASC,iBAAiB,gBAClCK,EAAW,IAAIC,qBAAqB,SAAAC,GACtCA,EAAQN,QAAQ,SAAAc,GACRA,EAAMC,iBACND,EAAME,OAAO9B,MAAM+B,QAAU,EAC7BH,EAAME,OAAO9B,MAAMC,UAAY,gBAC/BiB,EAASc,UAAUJ,EAAME,YAGlC,CACCP,UAAW,KAGfN,EAAMH,QAAQ,SAAAU,GACVN,EAASO,QAAQD","file":"scripts.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    console.log('JavaScript is working!');\r\n});\r\n\r\n\r\n// card content loading\r\n\r\n/***********************\r\n *    Helper Functions   *\r\n ***********************/\r\n\r\nfunction mapNumberRange(n, a, b, c, d) {\r\n    return ((n - a) * (d - c)) / (b - a) + c\r\n  }\r\n  \r\n  /***********************\r\n   *        Setup        *\r\n   ***********************/\r\n  \r\n  function setup() {\r\n    Array.from(document.querySelectorAll('.card')).map((cardEl) =>\r\n      initCard(cardEl)\r\n    )\r\n  }\r\n  \r\n  /***********************\r\n   *      initCard       *\r\n   ***********************/\r\n  \r\n  function initCard(card) {\r\n    const cardContent = card.querySelector('.card__content')\r\n    const gloss = card.querySelector('.card__gloss')\r\n  \r\n    requestAnimationFrame(() => {\r\n      gloss.classList.add('card__gloss--animatable')\r\n    })\r\n  \r\n    card.addEventListener('mousemove', (e) => {\r\n      const pointerX = e.clientX\r\n      const pointerY = e.clientY\r\n  \r\n      const cardRect = card.getBoundingClientRect()\r\n  \r\n      const halfWidth = cardRect.width / 2\r\n      const halfHeight = cardRect.height / 2\r\n  \r\n      const cardCenterX = cardRect.left + halfWidth\r\n      const cardCenterY = cardRect.top + halfHeight\r\n  \r\n      const deltaX = pointerX - cardCenterX\r\n      const deltaY = pointerY - cardCenterY\r\n  \r\n      const distanceToCenter = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\r\n  \r\n      const maxDistance = Math.max(halfWidth, halfHeight)\r\n  \r\n      const degree = mapNumberRange(distanceToCenter, 0, maxDistance, 0, 10)\r\n  \r\n      const rx = mapNumberRange(deltaY, 0, halfWidth, 0, 1)\r\n      const ry = mapNumberRange(deltaX, 0, halfHeight, 0, 1)\r\n  \r\n      cardContent.style.transform = `perspective(400px) rotate3d(${-rx}, ${ry}, 0, ${degree}deg)`\r\n  \r\n      gloss.style.transform = `translate(${-ry * 100}%, ${-rx * 100}%) scale(2.4)`\r\n  \r\n      gloss.style.opacity = `${mapNumberRange(\r\n        distanceToCenter,\r\n        0,\r\n        maxDistance,\r\n        0,\r\n        0.6\r\n      )}`\r\n    })\r\n  \r\n    card.addEventListener('mouseleave', () => {\r\n      cardContent.style = null\r\n      gloss.style.opacity = 0\r\n    })\r\n  }\r\n  \r\n  /***********************\r\n   *      Start Here     *\r\n   ***********************/\r\n  \r\n  setup()\r\n\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const cards = document.querySelectorAll('.product-card');\r\n    cards.forEach((card, index) => {\r\n        setTimeout(() => {\r\n            card.classList.add('visible');\r\n        }, index * 100); // Delay each card's appearance\r\n    });\r\n});\r\n\r\n// customer reviews tab \r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const tiles = document.querySelectorAll('.review-tile');\r\n  const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n              entry.target.style.opacity = 1;\r\n              entry.target.style.transform = 'translateY(0)';\r\n              observer.unobserve(entry.target);\r\n          }\r\n      });\r\n  }, {\r\n      threshold: 0.1\r\n  });\r\n\r\n  tiles.forEach(tile => {\r\n      observer.observe(tile);\r\n  });\r\n});\r\n"]}